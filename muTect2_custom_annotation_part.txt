reference=/pico/work/IscrC_FoRWArDS_1/db/reference/ucsc.hg19.fasta
dbSNP_file=/pico/work/IscrC_FoRWArDS_1/db/snp/dbsnp_150_hg19.vcf.gz
#silva=/home/andrea.ciolfi/alignment_tools/silva-1.1.1/
dbscSNV=/pico/work/IscrC_FoRWArDS_1/db/dbNSFP3.0/dbscSNV1.1.txt.gz
dbNSFP=/pico/work/IscrC_FoRWArDS_1/db/dbNSFP3.5/dbNSFP3.5.hg19.sorted.txt.gz
CpG_islands=/pico/work/IscrC_FoRWArDS_1/db/UCSC_tables/CpG_islands_UCSC.bed
repeatMasker=/pico/work/IscrC_FoRWArDS_1/db/UCSC_tables/repeatMasker_UCSC.bed
segmentDups=/pico/work/IscrC_FoRWArDS_1/db/UCSC_tables/segmentDups_UCSC.bed
TandemRep=/pico/work/IscrC_FoRWArDS_1/db/UCSC_tables/simpleTandemRep_UCSC.bed
SNPEFF_HOME=/pico/home/userexternal/aciolfi0/snpEff4.3/
ACMG=/pico/home/userexternal/abrusell/ACMG_RefGene.txt
DDG2P=/pico/home/userexternal/abrusell/DDG2P_RefGene.txt
Mendeliome=/pico/home/userexternal/abrusell/Mendeliome_RefGene.txt
Intervar=/pico/work/IscrC_FoRWArDS_1/NGS_tools/InterVar/Intervar.py

time1=$( date "+%s" )

# Lancio Intervar, lo devo lanciare nella dir del config.ini, altrimenti non funziona
cp /pico/work/IscrC_FoRWArDS_1/NGS_tools/InterVar/config.ini $outdir
cd $outdir
$Intervar -b hg19 -i $vcfinput -o $outdir$ID >$outdir$ID"_muTect2_custAnnot_log" 2>&1 &

# annoto con le annotazioni custom mediante snpEff
# attenzione SnpEff oltre alle CUSTOM annotations UCSC aggiunge anche l'effetto!!!
# tolgo l'opzione -o gatk, in questo caso, così ho l'annotazione di snpEff completa
# qui aggiungiamo l'annotazione nel formato snpEff completo ANN=(*), in modo
# che poi possiamo avere anche gli effetti secondari
# includo splice site nella finestra standard +-2 nt
# NB le annotazioni custom non vengono aggiunte nel formato -o GATK se ci sono
# più effetti diversi sulla stessa variante
java -Xmx64G -jar $SNPEFF_HOME"snpEff.jar" -v hg19 -i vcf -noStats -t -c $SNPEFF_HOME"snpEff.config" -interval $CpG_islands -interval $repeatMasker -interval $segmentDups -interval $TandemRep $vcfinput > $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot.vcf"  2>> $outdir$ID"_muTect2_ANNOT_log"

# estraggo il genename e vari effetti dal campo ANN=(*) di snpEFF perché quando ci sono più effetti (es. SPLICE_SITE+INTRON) manca il campo SNPEFF_GENE_NAME
python /pico/work/IscrC_FoRWArDS_1/NGS_tools/genenameEffFromSnpEff_4.3.py $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot.vcf" 2>> $outdir$ID"_muTect2_ANNOT_log"

# rinomino l'output con il nome file precedente
mv $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot.genenameEff.vcf" $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot.vcf"

# Annotazione di snpEff con dbNSFP, con -f seleziono i campi da inserire
java -Xmx64g -jar $SNPEFF_HOME"SnpSift.jar" dbnsfp -db $dbNSFP -f Ancestral_allele,Ensembl_geneid,Ensembl_transcriptid,aapos,SIFT_pred,Polyphen2_HDIV_pred,Polyphen2_HVAR_pred,MetaSVM_score,MetaLR_score,M-CAP_score,M-CAP_pred,REVEL_score,CADD_phred,DANN_score,fathmm-MKL_coding_pred,Eigen_coding_or_noncoding,Eigen-PC-phred,integrated_fitCons_score,integrated_confidence_value,gnomAD_exomes_AF,gnomAD_exomes_AFR_AF,gnomAD_exomes_AMR_AF,gnomAD_exomes_ASJ_AF,gnomAD_exomes_EAS_AF,gnomAD_exomes_FIN_AF,gnomAD_exomes_NFE_AF,gnomAD_exomes_SAS_AF,gnomAD_exomes_OTH_AF,gnomAD_genomes_AF,gnomAD_genomes_AFR_AF,gnomAD_genomes_AMR_AF,gnomAD_genomes_ASJ_AF,gnomAD_genomes_EAS_AF,gnomAD_genomes_FIN_AF,gnomAD_genomes_NFE_AF,gnomAD_genomes_OTH_AF,clinvar_clnsig,clinvar_trait,clinvar_golden_stars $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot.vcf" > $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.vcf" 2>> $outdir$ID"_muTect2_ANNOT_log"


# annoto anche gli INDELS con le frequenze di gnomAD_exomes: devo usare WGSA perche' dbNSFP annota solo gli SNP
# prima devo lasciare solo l'ultima riga dell'header, altrimenti WGSA non funziona
grep ^#CHROM $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.vcf" > $outdir$ID"_WGSA_header"
grep -v ^# $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.vcf" > $outdir$ID"_WGSA_body"
cat $outdir$ID"_WGSA_header" $outdir$ID"_WGSA_body" > $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3_WGSAfix.vcf"
java -cp /gss/gss_work/DRES_FoRWArDS/WGSA/resources/javaclass/ add_hg19_gnomAD_exomes_commandline $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3_WGSAfix.vcf" true 1 2 4 5 indel "/gss/gss_work/DRES_FoRWArDS/WGSA/resources/gnomAD/" 2>> $outdir$ID"_muTect2_ANNOT_log"

# annoto l'output di WGSA nel vcf
# NB nell'header i campi aggiunti da WGSA sono sempre chiamati tipo dbSNFP_gnomAD_AF, anche non sono aggiunti da dbNSFP
python /pico/work/IscrC_FoRWArDS_1/NGS_tools/gnomAD_wgsa_annotator.py $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.vcf" $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3_WGSAfix.vcf.addgnomAD_exomes" 2>> $outdir$ID"_muTect2_ANNOT_log"

mv $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3_gnomAD.vcf" $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.vcf"
rm -f $outdir$ID"_WGSA_header" $outdir$ID"_WGSA_body" $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3_WGSAfix.vcf" $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3_WGSAfix.vcf.addgnomAD_exomes"

# Annotazione di snpEff con dbscSNV, con -f seleziono i campi da inserire:
# al momento non funziona, con l'hg38
#java -Xmx64g -jar /pico/home/userexternal/abrusell/snpEff/SnpSift.jar dbnsfp -db $dbscSNV -f RefSeq_id_c.change_p.change,Ensembl_id_c.change_p.change,RefSeq_functional_consequence,Ensembl_functional_consequence,ada_score,rf_score $outdir$ID"_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.vcf" > $outdir$ID"_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3_ss.vcf" 2>> $outdir$ID"_muTect2_ANNOT_log"

# Annotazione del vcf con i dati dbNSFP3.5_gene di dati omim, pathways etc
python /pico/work/IscrC_FoRWArDS_1/NGS_tools/dbNSFP35_geneAnnotator.py $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.vcf" 1>> $outdir$ID"_muTect2_custAnnot_log" 2>&1 || { echo "dbNSFP35_geneAnnotator.py failed!"; exit 1; }
sed -i 's/\,;/;/g' $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene.vcf"
# Eliminiamo "Note=" dal campo Disease_description.
sed -i 's/Note=//g' $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene.vcf"
# Sostitutisco gli spazi con "_" nel vcf per rispettare lo standard vcf
sed -i 's/ /_/g' $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene.vcf"

# annotazione del VCF con i dati di miRBASE
/pico/work/IscrC_FoRWArDS_1/NGS_tools/run_annomir /pico/work/IscrC_FoRWArDS_1/db/mirbase/hsa_hg19_v20_mod.gff3 $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene.vcf" 1>> $outdir$ID"_muTect2_custAnnot_log" 2>&1


# annoto gli indels con il CADD score (v.1.3)
# prima lo facevamo solo sugli INDELs, ora lo facciamo su tutte le varianti del vcf, completezza

#### estraggo solo gli INDELs dal vcf
####vcftools --vcf $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP_gene.vcf" --keep-only-indels --recode --out $outdir$ID"_muTect2_raw_only_indels"
#### lo script del CADD funziona solo se il vcf non ha "chr" come inizio riga ed e' gzippato
####sed -i 's/^chr//g' $outdir$ID"_muTect2_raw_only_indels.recode.vcf"
####gzip $outdir$ID"_muTect2_raw_only_indels.recode.vcf"

java -jar $SNPEFF_HOME"SnpSift.jar" splitChr $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene_mir.vcf" 2>> $outdir$ID"_muTect2_ANNOT_log"

for i in {1..22} X Y; do
        sed 's/^chr//g' $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene_mir.chr"$i".vcf" | gzip > $outdir$ID"_tmp2CADD_"$i".vcf.gz"
done
wait

# carico i moduli necessari per il CADD scoring
module load python/2.7.8
module load autoload bx-python
module load autoload pysam

# ottengo i CADD scores
for j in {1..22} X Y; do
	/gss/gss_work/DRES_FoRWArDS/CADD_v1.3/bin/score.sh $outdir$ID"_tmp2CADD_"$j".vcf.gz" $outdir$ID"_muTect2_raw_SNP_indels.CADD_scored_"$j".tsv.gz" &
done
wait

for z in {1..22} X Y; do
	cat $outdir$ID"_muTect2_raw_SNP_indels.CADD_scored_"$z".tsv.gz" >> $outdir$ID"_muTect2_raw_SNP_indels.CADD_scored.tsv.gz"
done

# aggiungo i CADD degli INDELs al campo INFO del nostro file vcf
/pico/work/IscrC_FoRWArDS_1/NGS_tools/addCadd2vcf.py $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene_mir.vcf" $outdir$ID"_muTect2_raw_SNP_indels.CADD_scored.tsv.gz"

rm -f $outdir$ID"_tmp2CADD"*".vcf"*
rm -f $outdir$ID"_muTect2_raw_SNP_indels.CADD_scored"*".tsv.gz"*
rm -f $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene_mir.chr"*".vcf"



if [ -s $outdir$ID"_muTect2_raw_snps-indels_spidex_output.txt" ]; then
	python /pico/work/IscrC_FoRWArDS_1/NGS_tools/spidex_annotator.py $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene_mir_cadd.vcf" $outdir$ID"_muTect2_raw_snps-indels_spidex_output.txt" >> $outdir$ID"_muTect2_custAnnot_log" 2>&1
	spid=_spidex
else
	spid=
fi

#Annoto l'esistenza del gene nella liste ACMG, DDG2P, Mendeliome
/pico/work/IscrC_FoRWArDS_1/NGS_tools/ExistingGenesAnnotator.py $ACMG $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene_mir_cadd"$spid".vcf" ACMG >> $outdir$ID"_muTect2_custAnnot_log" 2>&1
/pico/work/IscrC_FoRWArDS_1/NGS_tools/ExistingGenesAnnotator.py $DDG2P $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene_mir_cadd"$spid"_ACMG.vcf" DDG2P >> $outdir$ID"_muTect2_custAnnot_log" 2>&1
/pico/work/IscrC_FoRWArDS_1/NGS_tools/ExistingGenesAnnotator.py $Mendeliome $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene_mir_cadd"$spid"_ACMG_DDG2P.vcf" Mendel >> $outdir$ID"_muTect2_custAnnot_log" 2>&1

#annoto fenotipo HGMD (spizzi00)
java -Xmx64g -jar $SNPEFF_HOME"SnpSift.jar" annotate -info PHEN /pico/work/IscrC_FoRWArDS_1/db/HGMD_PRO_latest_hg19.vcf.gz $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene_mir_cadd"$spid"_ACMG_DDG2P_Mendel.vcf" > $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene_mir_cadd"$spid"_ACMG_DDG2P_Mendel_HGMD.vcf" 2>> $outdir$ID"_muTect2_ANNOT_log"

mv $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene_mir_cadd"$spid"_ACMG_DDG2P_Mendel_HGMD.vcf" $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene_mir_cadd"$spid"_ACMG_DDG2P_Mendel.vcf"

# Annoto l'interpretazione clinica di Intervar 
python /pico/work/IscrC_FoRWArDS_1/NGS_tools/intervar_annotator.py $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene_mir_cadd"$spid"_ACMG_DDG2P_Mendel.vcf" $outdir$ID".hg19_multianno.txt.intervar" 1>> $outdir$ID"_muTect2_custAnnot_log" 2>&1

# annoto ricorrenza del singolo vcf
/pico/work/IscrC_FoRWArDS_1/NGS_tools/run_varDBannotator $outdir$ID"_muTect2_raw_snps-indels_genotype_filtered.SnpEff_UCSCAnnot_dbNSFP3.dbNSFP3_gene_mir_cadd"$spid"_ACMG_DDG2P_Mendel_intervar.vcf" 1>> $outdir$ID"_muTect2_custAnnot_log" 2>&1

# comprimo tutti i vcf di output 
gzip -f $outdir$ID"_muTect2_raw"*".vcf"


time2=$( date "+%s" )
echo [Total time] $((($time2 - $time1)/60)) min >> $outdir$ID"_muTect2_ANNOT_log"
